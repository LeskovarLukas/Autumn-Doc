@online{robo4you,
	year = {2022},
	title = {robo4you Website},
	url = {https://robo4you.at},
	urldate = {2013-10-14},
	language = {de}
}

@misc{malone2011unimate,
	title = {George Devol: A Life Devoted to Invention, and Robots},
	url = {https://spectrum.ieee.org/automaton/robotics/industrial-robots/george-devol-a-life-devoted-to-invention-and-robots},
	author = {Malone, Bob},
	language = {en},
	publisher = {IEEE Spectrum},
	year = {2011},
	urldate = {2021-06-17}
}

@book{bekey2005autonomous,
	title = {Autonomous robots: from biological inspiration to implementation and control},
	url = {https://books.google.at/books?hl=de&lr=&id=8MbxCwAAQBAJ&oi=fnd&pg=PR7&dq=autonomous+robots&ots=5EXAZx-UDf&sig=u_CyTA0fa4aMRFAAdnbXpKhaf94&redir_esc=y#v=onepage&q=autonomous%20robots&f=false}, 
	author = {Bekey, George A},
	urldate = {2021-06-30},
	year = {2005},
	language = {en},
	publisher = {MIT press}
}

@misc{hovermap2021,
	title = {Autonomy Level 2 for Emesent Hovermap},
	url = {https://www.emesent.io/autonomy-level-2/},
	urldate = {2021-07-04},
	author = {{Emesent Hovermap}}
}

@misc{exynAero2021,
	title = {Exyn Aero - Aerial Mapping Drone},
	url = {https://www.exyn.com/products/exyn-aero-aerial-mapping-drone},
	urldate = {2021-07-04},
	author = {{Exyn Aero}}
}

@misc{hovermapIMG2021,
	title = {Emesent\_Hovermap.{JPG} ({JPEG} {Image}, 2018 × 910 pixels)},
	url = {https://www.emesent.io/wp-content/uploads/2020/07/DSC_3700-1finalcrop.jpg?id=7339},
	urldate = {2021-07-04},
	author = {{Emesent}}
}

@misc{openSourceRoboticsFoundationConceptsNodate,
	title = {Concepts - {ROS} {Wiki}},
	url = {http://wiki.ros.org/ROS/Concepts},
	language = {en},
	urldate = {2021-07-08},
	author = {{Open Source Robotics Foundation}}
}

@misc{openSourceRoboticsFoundationDefinitionNodate,
	title = {Definition - {ROS} {Answers}},
	url = {https://answers.ros.org/question/12230/what-is-ros-exactly-middleware-framework-operating-system/},
	language = {en},
	urldate = {2021-07-08},
	author = {Gerkey, Brian}
}

@misc{openSourceRoboticsFoundationPackageNodate,
	title = {Packages - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Packages},
	language = {en},
	urldate = {2021-07-08},
	author = {{Open Source Robotics Foundation}}
}

@misc{openSourceRoboticsFoundationBuildNodate,
	title = {Building Packages - {ROS} {Wiki}},
	url = {http://wiki.ros.org/ROS/Tutorials/BuildingPackages},
	language = {en},
	urldate = {2021-07-08},
	author = {{Open Source Robotics Foundation}}
}

@misc{openSourceRoboticsFoundationMetapackageNodate,
	title = {Metapackages - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Metapackages},
	language = {en},
	urldate = {2021-07-08},
	author = {{Open Source Robotics Foundation}}
}

@misc{openSourceRoboticsFoundationNodesNodate,
	title = {Nodes - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Nodes},
	language = {en},
	urldate = {2021-07-09},
	author = {{Open Source Robotics Foundation}}
}

@book{stephensBeginning2015,
	title = {Beginning Software Engineering},
	author = {Stephens, Rod},
	isbn = {9781118969168},
	url = {https://books.google.at/books?id=SyHWBgAAQBAJ},
	year = {2015},
	publisher = {Wiley},
	language = {en},
	urldate = {2021-07-09}
}

@misc{openSourceRoboticsFoundationServicesNodate,
	title = {Services - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Services},
	language = {en},
	urldate = {2021-07-09},
	author = {{Open Source Robotics Foundation}}
}

@misc{rfc1831,
	series = {Request for Comments},
	number = {1831},
	howpublished = {RFC 1831},
	publisher =	{RFC Editor},
	doi = {10.17487/RFC1831},
	url = {https://rfc-editor.org/rfc/rfc1831.txt},
	author = {Raj Srinivasan},
	title =	{{RPC: Remote Procedure Call Protocol Specification Version 2}},
	pagetotal =	{18},
	year = {1995},
	month =	aug,
	abstract = {This document describes the ONC Remote Procedure Call (ONC RPC Version 2) protocol as it is currently deployed and accepted. {[}STANDARDS-TRACK{]}},
}

@misc{openSourceRoboticsFoundationMessagesNodate,
	title = {Messages - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Messages},
	language = {en},
	urldate = {2021-07-09},
	author = {{Open Source Robotics Foundation}}
}

@misc{openSourceRoboticsFoundationMasterNodate,
	title = {Master - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Master},
	language = {en},
	urldate = {2021-07-22},
	author = {{Open Source Robotics Foundation}}
}

@misc{openSourceRoboticsFoundationParameterServerNodate,
	title = {Parameter Server - {ROS} {Wiki}},
	url = {http://wiki.ros.org/Parameter%20Server},
	language = {en},
	urldate = {2021-07-22},
	author = {{Open Source Robotics Foundation}}
}

@misc{openSourceRoboticsFoundationURDFNodate,
	title = {URDFP- {ROS} {Wiki}},
	url = {http://wiki.ros.org/urdf/Tutorials},
	language = {en},
	urldate = {2021-07-28},
	author = {{Open Source Robotics Foundation}}
}

@misc{graphvizAuthorsAboutNodate,
	title = {About - {Graphviz}},
	url = {https://graphviz.org/about/},
	language = {en},
	urldate = {2021-07-28},
	author = {{The Graphviz Authors}}
}

@article{Pan2020,
	abstract = {In daily travel and activities, pathfinding is a significant process. They are often used in transportation routes calculation. They have now evolved to be able to solve most situations of the pathfinding and its related problems. This review describes previous and recent studies on the pathfinding algorithms. It reviews the development of pathfinding algorithms in a classification base on their usage. The aim is to summarize the application of the pathfinding algorithms for the readers interested in the subject that can be used as a supplement.},
	author = {Pan, Tong and {Ching Pun-Cheng}, Shuk},
	doi = {10.20944/preprints202008.0627.v1},
	file = {:C\:/Users/fabia/OneDrive - HTBLuVA Wiener Neustadt/4BHIF/Dokumente/daPapers/preprints202008.0627.v1.pdf:pdf},
	keywords = {algorithms,multi-criteria,multi-modal,multi-network,pathfinding,transportation},
	number = {August},
	pages = {1--20},
	title = {{A Discussion on the Evolution of the Pathfinding Algorithms}},
	url = {www.preprints.org},
	year = {2020}
}

@article{Bekris2003,
	abstract = {We propose a combination of techniques that solve multiple queries for motion planning problems with single query planners. Our implementation uses a probabilistic roadmap method (PRM) with bidirectional rapidly exploring random trees (BI-RRT) as the local planner. With small modifications to the standard algorithms, we obtain a multiple query planner which is significantly faster and more reliable than its component parts. Our method provides a smooth spectrum between the PRM and BI-RRT techniques and obtains the advantages of both. We observed that the performance differences are most notable in planning instances with several rigid nonconvex robots in a scene with narrow passages. Our work is in the spirit of non-uniform sampling and refinement techniques used in earlier work on PRM.},
	author = {Bekris, Kostas E. and Chen, Brian Y. and Ladd, Andrew M. and Plaku, Erion and Kavraki, Lydia E.},
	doi = {10.1109/iros.2003.1250704},
	file = {:D\:/Downloads/bekris-chen2003multiple-query-probabilistic.pdf:pdf},
	journal = {IEEE International Conference on Intelligent Robots and Systems},
	number = {March 2018},
	pages = {656--661},
	title = {{Multiple Query Probabilistic Roadmap Planning using Single Query Planning Primitives}},
	volume = {1},
	year = {2003}
}

@misc{stackexchangeMultiSingleQuery2019,
	title = {Difference between Single-Query and Multiple Query Algorithms?},
	url = {https://robotics.stackexchange.com/questions/18433/difference-between-single-query-and-multiple-query-algorithms},
	language = {en},
	urldate = {2021-09-20},
	author = {{Adwait Naik}}
}

@article{Karaman2011,
	abstract = {During the last decade, incremental sampling-based motion planning algorithms, such as the Rapidly-exploring Random Trees (RRTs), have been shown to work well in practice and to possess theoretical guarantees such as probabilistic completeness. However, no theoretical bounds on the quality of the solution obtained by these algorithms, e.g., in terms of a given cost function, have been established so far. The purpose of this paper is to fill this gap, by designing efficient incremental sampling-based algorithms with provable optimality properties. The first contribution of this paper is a negative result: it is proven that, under mild technical conditions, the cost of the best path returned by RRT converges almost surely to a non-optimal value, as the number of samples increases. Second, a new algorithm is considered, called the Rapidly-exploring Random Graph (RRG), and it is shown that the cost of the best path returned by RRG converges to the optimum almost surely. Third, a tree version of RRG is introduced, called RRT∗, which preserves the asymptotic optimality of RRG while maintaining a tree structure like RRT. The analysis of the new algorithms hinges on novel connections between sampling-based motion planning algorithms and the theory of random geometric graphs. In terms of computational complexity, it is shown that the number of simple operations required by both the RRG and RRT∗ algorithms is asymptotically within a constant factor of that required by RRT.},
	archivePrefix = {arXiv},
	arxivId = {1005.0416},
	author = {Karaman, Sertac and Frazzoli, Emilio},
	doi = {10.15607/rss.2010.vi.034},
	eprint = {1005.0416},
	file = {:C\:/Users/fabia/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Karaman, Frazzoli - 2011 - Incremental sampling-based algorithms for optimal motion planning.1186v1:1186v1},
	isbn = {9780262516815},
	issn = {2330765X},
	journal = {Robotics: Science and Systems},
	keywords = {motion planning,optimal path planning,random geometric graphs,sampling-based algorithms},
	pages = {267--274},
	title = {{Incremental sampling-based algorithms for optimal motion planning}},
	volume = {6},
	year = {2011}
}

@article{Zammit2018,
	abstract = {Unmanned Aerial Vehicles (UAVs) are being integrated into a wide range of indoor and outdoor applications. In this light, robust and efficient path planning is paramount. An extensive literature review showed that the A* and Rapidly Exploring Random Tree (RRT) algorithms and their variants are the most promising path planning algorithms candidates for 3D UAV scenarios. These two algorithms are tested in different complexity 3D scenarios consisting of a box and a combination of vertical and horizontal plane obstacles with apertures. The path length and generation time are considered as the performance measures. The A* with a spectrum of resolutions, the standard RRT with different step size constraints, RRT without step size constraints and the Multiple RRT (MRRT) with various seeds are implemented and their performance measures compared. Results confirm that all algorithms are able to generate a path in all scenarios for all resolutions, step sizes and seeds considered, respectively. Overall A*‘s path length is more optimal and generation time is shorter than RRT projecting A* as a better candidate for online 3D path planning of UAVs.},
	author = {Zammit, Christian and van Kampen, Erik Jan},
	doi = {10.2514/6.2018-1846},
	file = {:C\:/Users/fabia/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Zammit, van Kampen - 2018 - Comparison between A and RRT algorithms for UAV path planning(2).pdf:pdf},
	isbn = {9781624105265},
	journal = {AIAA Guidance, Navigation, and Control Conference, 2018},
	number = {210039},
	title = {{Comparison between A* and RRT algorithms for UAV path planning}},
	year = {2018}
}

@article{Sathyaraj2008,
	abstract = {Unmanned aerial vehicles (UAVs) are used in team for detecting targets and keeping them in its sensor range. There are various algorithms available for searching and monitoring targets. The complexity of the search algorithm increases if the number of nodes is increased. This paper focuses on multi UAVs path planning and Path Finding algorithms. Number of Path Finding and Search algorithms was applied to various environments, and their performance compared. The number of searches and also the computation time increases as the number of nodes increases. The various algorithms studied are Dijkstra's algorithm, Bellman Ford's algorithm, Floyd-Warshall's algorithm and the AStar algorithm. These search algorithms were compared. The results show that the AStar algorithm performed better than the other search algorithms. These path finding algorithms were compared so that a path for communication can be established and monitored. {\textcopyright} 2008 Springer Science+Business Media, LLC.},
	author = {Sathyaraj, B. Moses and Jain, L. C. and Finn, A. and Drake, S.},
	doi = {10.1007/s10700-008-9035-0},
	file = {:C\:/Users/fabia/OneDrive - HTBLuVA Wiener Neustadt/4BHIF/Dokumente/daPapers/Sathyaraj_2008.pdf:pdf},
	issn = {15684539},
	journal = {Fuzzy Optimization and Decision Making},
	keywords = {AStar,Dijkstra,Distance vector algorithms,Pathfinding},
	number = {3},
	pages = {257--267},
	title = {{Multiple UAVs path planning algorithms: A comparative study}},
	volume = {7},
	year = {2008}
}

@misc{standfordAStarComparison1997,
	title = {Introduction to A*},
	url = {http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html},
	language = {en},
	urldate = {2021-09-25},
	author = {{Amit Patel}}
}

